LUONNOSTELU
concurrency (versiointi)
  -tehdään siirto... siinä mukana tulee versionumero? jos tietokannassa oleva numero sama
  kuin pyynnön mukana tuleva niin tehdään muutos. jos ei niin perutaan?
  -frontti lähettää nyt versio numeron
  -backki käsittely vielä
  -vielä peruminen frontissa jos epäonnistuu. aina kun mikää epäonnistuu niin ladataan kaikki uusiski

ratakisu 1 tehään tämä ainakin ensin
palautetaan uusi järjestys ja versionumero
  -tällä voi korjata ongelmia. se voi päivittää virheen
  -hitaampi ja useimmiten toistoa
  -robust>effeciency

ratakisu 2
palautetaan vaan tieto että meni pieleen
  -teoriassa ei pitäisi tarvita mitään muuta
  -jos joku muu oli tekemässä muutosta niin niitten muutos broadcast on matkalla
  -hauraampi

muut ws päivitykset
  -todo muokkaus
  -todo poisto
  -todo lisäys
  -notepad lisäys
  -notepad poisto
  -notepad siirto? ei tehdä. ehkä myöhemmin
tarviinko versioinnin notepadeillekkin?


REST API
todo-order
  "reorder todos" PATCH /api/todo-order/reorder
    reorders todos in a notepad

notepads
  "get all todos" GET /api/notepads/{notepad_id}/todos
    saa parametrinä notepad id:n
    palauttaa kaikki siihen liitetyt todot järjestettynä todoorder mukaan
  "add todo" POST /api/notepads/{notepad_id}/todos
    saa parametrinä notepad id:n
    luo uuden todon ja liittää sen notepadiin
  "get notepad" GET /api/notepads/{company_slug}
    palauttaa kaikki notepadit mitkä kuuluu firmalle
  "add notepad" POST /api/notepads/{company_slug}
    luo uuden notepadin ja liittää sen firmalle
  

todos
  "delete todo" DELETE /api/todos/{todo_id}
    saa parametrinä todo id:n
  "update todo" PUT /api/todos/{todo_id}
    saa parametrinä todo id:n
    muokkaa tekstiä
  "toggle status" PATCH /api/todos/{todo_id}/status
    saa parametrinä todo id:n
    käytetään is_done kääntöön

companies
  "get cover letter" GET /api/companies/{company_slug}/cover-letter
    saa parametrinä firman slugin
    palauttaa cover_letter(letter_en ja letter_fi)

  "get cv" GET /api/companies/{company_slug}/cv
    saa parametrinä firman slugin
      companies taulust select cv_id where company_slug=company_slug
      from cv_component_mappings select component_id where cv_id=cv_id order_by display_order
      from cv_components select category, text_fi, text_en where id=component_id
    palauttaa ne komponentit oikeassa järjestyksessä

TESTIDATA
1 sql skripti
  ehkä helpompi??
2 laravel tsydeemi
  tyylikkäämpi
  ehkä helpompi update: lol ei :D
  oppis jotain laravelista
  helpompi sit tuotannossa alustaa uudestaan

NOTEPADIT
tehdään niistä samanlainen kuin todot. tehdään niille oma order taulu ja lisätään companiesiin versionti

controller todo
  -todot järkättynä notepad id:n mukaan
  -notepad id on todo listaelementtien tiedossa. tulee kun näpäytetään notepadin nimeä

controller company
  -notepadit järkättynä company id:n mukaan
  -mistä saa company id:n? notepad_lista? 

provider uudelleenjärjestely
kontrollerit
  -komponentit kutsuu näitä
  -täältä kutsutaan provider funktioita
provider
  -sisältää tilan
  -funktiot jotka hoitaa optimistisen päivityksen ja kutsuu serviceä. hoitaa myös virheet
web_socket_handler
  -käyttää provideriä
  -käsittelee websocket päivitysviestit. kutsuu funktioita jotka on samassa
  -poistaa tempit ja lisää muutokset provider tilaan
servicet
  -pelkästään tekee apikutsuja

todo_list kutsuu kaikkien todo hakua. onko hyvä?

notepad
lisäys

VAIHE 3

FRONTTI
  -optimistinen päivitys kaikkeen
  -notepadien crud. lisäys. poisto. muokkaus. ei uudelleenjärjestelyä vielä.
  -broadcast päivitykset kaikkeen

  -koitetaan nopeuttaa sivun latausta avatessa (company_slug vs id). ei vielä
  -koodi on sotkuista. jaettu komponentti
  -siivotaan ulkonäköä. tehdään shared widget
  -se outo juttu oikealla kännyllä avatessa
  -käännökset

BACKKI
  -pitäiskö jotain testejä kirjoittaa concurrencylle? eihän sitä muuten voi testata
  -cors joksikin järkeväksi
  -db vois vaihtaa sen yhen kentän jsonb:ksi

YHTEENSOVITUS
  -api rajoitukset gcp:lle
  -

VAIHE 2

FRONTTI
  -tänne se toinen websocket pääty
  -abaut sivu käyttämään tietokannassa olevaa. pitää vittu lisätä se kaikki sit kantaan.
  -pitää laittaa käyttämään company slugia (demo alkuun)
  -useiden notepadien käyttö. eli siis pitää pystyä valitsemaan notepaista
    -uusi näkymä missä on kaikki notepadit mitä firmalla on? siitä voi sit painamalla siirtyä

BACKKI
  -järjestyksen säilyttäminen BE
  -cv tekstit tietokannassa 
  -tietokanta uusiksi suunitelman mukaan
  -concurrency hoitaminen versioinnilla ja php jokin websocket

YHTEENSOVUTS
  -ääääääääääääääää 

YHTEENSOVITUS

VAIHE 1:

FRONTTI
todolista
  -ne on ihan yksinkertaisesti vain pinossa. (annetaanko kääntää kännyy??)
  -joku hiton navbar mistä pääsee lukemaan musta
  -saa lisätä uusia muistiinpanoja
  -voi poistaa muistiinpanoja ja muokata

abaut
  -tietoa musta eli siis CV
  -tietoa projusta (sitten kun se on hieno)


BACKKI
  -php rest api lisäyksiä ja poistoja varten


YHTEENSOVITUS
käynnistetään kaikki sit tuotannossa docker composella

pitäiskö olla jokin järkevämpi devausympäristö?



VAIHE ?
gcp hostaus
  -api, websocket ja frontti kaikki käyttää cloud runia
  -psql käyttää cloud sql
käännökset
siistitään kaikki yhteensovitukset (ei env cors policyt etc)
testaus
ulkonäkö frontissa nätiksi
useita notepadeja. eli siis voi luoda uuden listan muistiinpanoja ja ne on listattu jossain
